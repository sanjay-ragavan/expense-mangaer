{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'heures',\n  minutes: 'minutes',\n  seconds: 'secondes',\n  meridiem: 'méridien'\n};\nconst frFRPickers = {\n  // Calendar navigation\n  previousMonth: 'Mois précédent',\n  nextMonth: 'Mois suivant',\n  // View navigation\n  openPreviousView: 'Ouvrir la vue précédente',\n  openNextView: 'Ouvrir la vue suivante',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'La vue année est ouverte, ouvrir la vue calendrier' : 'La vue calendrier est ouverte, ouvrir la vue année',\n  // DateRange placeholders\n  start: 'Début',\n  end: 'Fin',\n  // Action bar\n  cancelButtonLabel: 'Annuler',\n  clearButtonLabel: 'Vider',\n  okButtonLabel: 'OK',\n  todayButtonLabel: \"Aujourd'hui\",\n  // Toolbar titles\n  datePickerToolbarTitle: 'Choisir une date',\n  dateTimePickerToolbarTitle: \"Choisir la date et l'heure\",\n  timePickerToolbarTitle: \"Choisir l'heure\",\n  dateRangePickerToolbarTitle: 'Choisir la plage de dates',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => \"Choix des \".concat(views[view], \". \").concat(time === null ? 'Aucune heure choisie' : \"L'heure choisie est \".concat(adapter.format(time, 'fullTime'))),\n  hoursClockNumberText: hours => \"\".concat(hours, \" heures\"),\n  minutesClockNumberText: minutes => \"\".concat(minutes, \" minutes\"),\n  secondsClockNumberText: seconds => \"\".concat(seconds, \" secondes\"),\n  // Digital clock labels\n  selectViewText: view => \"Choisir \".concat(views[view]),\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Semaine',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => \"Semaine \".concat(weekNumber),\n  calendarWeekNumberText: weekNumber => \"\".concat(weekNumber),\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? \"Choisir la date, la date s\\xE9lectionn\\xE9e est \".concat(utils.format(value, 'fullDate')) : 'Choisir la date',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? \"Choisir l'heure, l'heure s\\xE9lectionn\\xE9e est \".concat(utils.format(value, 'fullTime')) : \"Choisir l'heure\",\n  // fieldClearLabel: 'Clear value',\n\n  // Table labels\n  timeTableLabel: \"choix de l'heure\",\n  dateTableLabel: 'choix de la date',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'A'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'JJ',\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa'\n};\nexport const frFR = getPickersLocalization(frFRPickers);","map":{"version":3,"names":["getPickersLocalization","views","hours","minutes","seconds","meridiem","frFRPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerToolbarTitle","dateTimePickerToolbarTitle","timePickerToolbarTitle","dateRangePickerToolbarTitle","clockLabelText","time","adapter","concat","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","selectViewText","calendarWeekNumberHeaderLabel","calendarWeekNumberHeaderText","calendarWeekNumberAriaLabelText","weekNumber","calendarWeekNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","timeTableLabel","dateTableLabel","fieldYearPlaceholder","params","repeat","digitAmount","fieldMonthPlaceholder","contentType","fieldDayPlaceholder","fieldHoursPlaceholder","fieldMinutesPlaceholder","fieldSecondsPlaceholder","fieldMeridiemPlaceholder","frFR"],"sources":["C:/Users/sanja/OneDrive/Desktop/New folder/frontend/node_modules/@mui/x-date-pickers/locales/frFR.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'heures',\n  minutes: 'minutes',\n  seconds: 'secondes',\n  meridiem: 'méridien'\n};\nconst frFRPickers = {\n  // Calendar navigation\n  previousMonth: 'Mois précédent',\n  nextMonth: 'Mois suivant',\n  // View navigation\n  openPreviousView: 'Ouvrir la vue précédente',\n  openNextView: 'Ouvrir la vue suivante',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'La vue année est ouverte, ouvrir la vue calendrier' : 'La vue calendrier est ouverte, ouvrir la vue année',\n  // DateRange placeholders\n  start: 'Début',\n  end: 'Fin',\n  // Action bar\n  cancelButtonLabel: 'Annuler',\n  clearButtonLabel: 'Vider',\n  okButtonLabel: 'OK',\n  todayButtonLabel: \"Aujourd'hui\",\n  // Toolbar titles\n  datePickerToolbarTitle: 'Choisir une date',\n  dateTimePickerToolbarTitle: \"Choisir la date et l'heure\",\n  timePickerToolbarTitle: \"Choisir l'heure\",\n  dateRangePickerToolbarTitle: 'Choisir la plage de dates',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Choix des ${views[view]}. ${time === null ? 'Aucune heure choisie' : `L'heure choisie est ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} heures`,\n  minutesClockNumberText: minutes => `${minutes} minutes`,\n  secondsClockNumberText: seconds => `${seconds} secondes`,\n  // Digital clock labels\n  selectViewText: view => `Choisir ${views[view]}`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Semaine',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Semaine ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choisir la date, la date sélectionnée est ${utils.format(value, 'fullDate')}` : 'Choisir la date',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choisir l'heure, l'heure sélectionnée est ${utils.format(value, 'fullTime')}` : \"Choisir l'heure\",\n  // fieldClearLabel: 'Clear value',\n\n  // Table labels\n  timeTableLabel: \"choix de l'heure\",\n  dateTableLabel: 'choix de la date',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'A'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'JJ',\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa'\n};\nexport const frFR = getPickersLocalization(frFRPickers);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}